import React, { useState } from 'react';
import { Map, Layers, Users, Building, Zap, Droplets } from 'lucide-react';
import { useLanguage } from '../context/LanguageContext';

const VulnerabilityMap: React.FC = () => {
  const { translate } = useLanguage();
  const [activeLayer, setActiveLayer] = useState('population');

  const layers = [
    { id: 'population', name: 'Population Density', icon: Users, color: 'blue' },
    { id: 'infrastructure', name: 'Critical Infrastructure', icon: Building, color: 'red' },
    { id: 'utilities', name: 'Utilities', icon: Zap, color: 'orange' },
    { id: 'flooding', name: 'Flood Risk', icon: Droplets, color: 'teal' }
  ];

  const vulnerabilityZones = [
    { x: 15, y: 25, size: 'large', level: 'high', type: 'dense_population' },
    { x: 45, y: 40, size: 'medium', level: 'medium', type: 'infrastructure' },
    { x: 70, y: 60, size: 'small', level: 'low', type: 'utilities' },
    { x: 30, y: 70, size: 'large', level: 'high', type: 'flood_zone' },
    { x: 85, y: 30, size: 'medium', level: 'medium', type: 'hospital' }
  ];

  return (
    <div className="glass rounded-xl shadow-2xl p-6 transition-all-smooth hover:shadow-neon-purple/20">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-lg font-semibold text-white flex items-center">
          <Map className="w-5 h-5 mr-2 text-purple-600" />
          {translate('vulnerabilityMap')}
        </h3>
        
        <div className="flex items-center space-x-2">
          <Layers className="w-4 h-4 text-gray-300" />
          <span className="text-sm text-gray-300">{translate('layers')}</span>
        </div>
      </div>

      {/* Layer Controls */}
      <div className="mb-4">
        <div className="flex flex-wrap gap-2">
          {layers.map((layer) => {
            const Icon = layer.icon;
            return (
              <button
                key={layer.id}
                onClick={() => setActiveLayer(layer.id)}
                className={`flex items-center space-x-2 px-3 py-2 rounded-lg text-sm transition-colors ${
                  activeLayer === layer.id
                    ? `bg-${layer.color}-500/20 text-${layer.color}-400 border border-${layer.color}-500/30`
                    : 'bg-white/10 text-gray-300 hover:bg-white/20'
                }`}
              >
                <Icon className="w-4 h-4" />
                <span>{layer.name}</span>
              </button>
            );
          })}
        </div>
      </div>

      {/* Map Display */}
      <div className="relative aspect-video bg-gradient-to-br from-green-900/30 to-blue-900/30 rounded-lg overflow-hidden border-2 border-white/20">
        {/* Base Map */}
        <div className="absolute inset-0 bg-gradient-to-br from-green-900/20 to-blue-900/20" />
        
        {/* Simulated terrain */}
        <div className="absolute inset-0">
          <div className="absolute top-4 left-4 w-16 h-12 bg-green-500/30 rounded-lg" />
          <div className="absolute top-8 right-8 w-20 h-16 bg-green-600/20 rounded-lg" />
          <div className="absolute bottom-8 left-12 w-24 h-8 bg-blue-500/30 rounded-full" />
          <div className="absolute bottom-4 right-4 w-12 h-20 bg-green-500/30 rounded-lg" />
        </div>

        {/* Vulnerability Zones */}
        {vulnerabilityZones.map((zone, index) => (
          <div
            key={index}
            className={`absolute rounded-full border-2 cursor-pointer transition-all duration-300 hover:scale-110 group ${
              zone.level === 'high' 
                ? 'border-red-500 bg-red-500 bg-opacity-30 shadow-lg' 
                : zone.level === 'medium'
                ? 'border-orange-500 bg-orange-500 bg-opacity-30'
                : 'border-yellow-500 bg-yellow-500 bg-opacity-30'
            } ${
              zone.size === 'large' 
                ? 'w-16 h-16' 
                : zone.size === 'medium' 
                ? 'w-12 h-12' 
                : 'w-8 h-8'
            }`}
            style={{
              left: `${zone.x}%`,
              top: `${zone.y}%`,
              transform: 'translate(-50%, -50%)'
            }}
          >
            <div className="absolute -top-12 left-1/2 transform -translate-x-1/2 glass-dark text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap">
              {zone.type.replace('_', ' ').toUpperCase()} - {zone.level.toUpperCase()}
            </div>
            <div className={`absolute inset-0 rounded-full animate-ping ${
              zone.level === 'high' ? 'bg-red-500' : 
              zone.level === 'medium' ? 'bg-orange-500' : 'bg-yellow-500'
            }`} />
          </div>
        ))}

        {/* Map Scale */}
        <div className="absolute bottom-4 left-4 glass px-3 py-2 rounded-lg">
          <div className="flex items-center space-x-2 text-xs">
            <div className="w-8 h-0.5 bg-white" />
            <span className="text-white">1 km</span>
          </div>
        </div>

        {/* Legend */}
        <div className="absolute top-4 right-4 glass p-3 rounded-lg">
          <h4 className="text-xs font-semibold text-white mb-2">{translate('riskLevel')}</h4>
          <div className="space-y-1">
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 bg-red-500 rounded-full" />
              <span className="text-xs text-gray-300">{translate('high')}</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 bg-orange-500 rounded-full" />
              <span className="text-xs text-gray-300">{translate('medium')}</span>
            </div>
            <div className="flex items-center space-x-2">
              <div className="w-3 h-3 bg-yellow-500 rounded-full" />
              <span className="text-xs text-gray-300">{translate('low')}</span>
            </div>
          </div>
        </div>
      </div>

      {/* Statistics */}
      <div className="mt-4 grid grid-cols-2 sm:grid-cols-4 gap-3">
        <div className="p-3 glass-dark border border-red-500/30 rounded-lg text-center">
          <div className="text-lg font-bold text-red-400">23</div>
          <div className="text-xs text-red-300">{translate('highRiskZones')}</div>
        </div>
        <div className="p-3 glass-dark border border-neon-orange/30 rounded-lg text-center">
          <div className="text-lg font-bold text-neon-orange">45</div>
          <div className="text-xs text-orange-300">{translate('mediumRiskZones')}</div>
        </div>
        <div className="p-3 glass-dark border border-yellow-500/30 rounded-lg text-center">
          <div className="text-lg font-bold text-yellow-600">67</div>
          <div className="text-xs text-yellow-300">{translate('lowRiskZones')}</div>
        </div>
        <div className="p-3 glass-dark border border-neon-blue/30 rounded-lg text-center">
          <div className="text-lg font-bold text-neon-blue">12.3</div>
          <div className="text-xs text-blue-300">kmÂ² {translate('coverage')}</div>
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityMap;